d.pve
# first vs. peak
d.fvp <- deming(estimate_em50 ~ estimate_onset,
xstd = std.error_onset,
ystd = std.error_em50,
data = all_coefs)
d.fvp
# compile and export confidence limits on slope and intercept estimates
list(d.fvp,
d.fve,
d.pve) -> dl1
names(dl1) <- c('first_v_peak',
'first_v_end',
'peak_v_end')
dl1.coefs <- lapply(dl1, function(x) data.frame(x$coefficients,x$ci))
for (i in seq_along(dl1.coefs)) {
dl1.coefs[[i]]$model <- names(dl1)[i]
}
dl1.coefs <-
dl1.coefs %>%
do.call(rbind, .)
dl1.coefs
names(dl1.coefs)[1] <- c('estimate')
dl1.coefs$term <- 'slope'
dl1.coefs$term[grep('Intercept', row.names(dl1.coefs))] <- 'intercept'
dl1.coefs
write.table(dl1.coefs,
file = '../output/deming_reg_coefs_Iler.csv',
quote = F,
sep = ',',
row.names = F,
col.names = T)
head(all_coefs)
names(all_coefs)
end_coefs
all_coefs <-
dplyr::full_join(
dplyr::select(onset_coefs, -model),
dplyr::select(peak_coefs, -model),
by = 'species') %>%
dplyr::full_join(
dplyr::select(end_coefs -model),
by = 'species')
dplyr::full_join(
dplyr::select(onset_coefs, -model),
dplyr::select(peak_coefs, -model),
by = 'species')
dplyr::full_join(
dplyr::select(onset_coefs, -model),
dplyr::select(peak_coefs, -model),
by = 'species') %>%
dplyr::full_join(
dplyr::select(end_coefs -model),
by = 'species')
end_coefs
dplyr::select(end_coefs -model)
dplyr::select(onset_coefs, -model),
dplyr::select(peak_coefs, -model),
by = 'species') %>%
dplyr::full_join(
all_coefs <-
dplyr::full_join(
dplyr::select(onset_coefs, -model),
dplyr::select(peak_coefs, -model),
by = 'species') %>%
dplyr::full_join(
dplyr::select(end_coefs, -model),
by = 'species')
head(all_coefs)
d.fvp <- deming(estimate_em50 ~ estimate_onset,
xstd = std.error_onset,
ystd = std.error_em50,
data = all_coefs)
# first vs. end
d.fve <- deming(estimate_end ~ estimate_onset,
xstd = std.error_onset,
ystd = std.error_end,
data = all_coefs)
# peak vs. end
d.pve <- deming(estimate_end ~ estimate_em50,
xstd = std.error_em50,
ystd = std.error_end,
data = all_coefs)
# compile and export confidence limits on slope and intercept estimates
list(d.fvp,
d.fve,
d.pve) -> dl1
names(dl1) <- c('first_v_peak',
'first_v_end',
'peak_v_end')
dl1.coefs <- lapply(dl1, function(x) data.frame(x$coefficients,x$ci))
for (i in seq_along(dl1.coefs)) {
dl1.coefs[[i]]$model <- names(dl1)[i]
}
dl1.coefs <-
dl1.coefs %>%
do.call(rbind, .)
names(dl1.coefs)[1] <- c('estimate')
dl1.coefs$term <- 'slope'
dl1.coefs$term[grep('Intercept', row.names(dl1.coefs))] <- 'intercept'
write.table(dl1.coefs,
file = '../output/deming_reg_coefs_Iler.csv',
quote = F,
sep = ',',
row.names = F,
col.names = T)
x <- coefs_all
x <- all_coefs
head(x)
model_name <- 'onset'
x %>%
dplyr::select(species, grep(model_name, names(x)))
head(all_coefs)
# produce plots of the Deming regression results:
all_coefs %>%
ggplot() + geom_point(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 - std.error_em50))
# produce plots of the Deming regression results:
all_coefs %>%
ggplot() + geom_point(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 - std.error_em50)) +
geom_errorbar() +
geom_errorbarh()
# produce plots of the Deming regression results:
all_coefs %>%
ggplot() + geom_point(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 - std.error_em50)) +
geom_errorbar() +
geom_errorbarh()
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 - std.error_em50)) +
geom_errorbar() +
geom_errorbarh() +
geom_point()
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 + std.error_em50)) +
geom_errorbar() +
geom_errorbarh() +
geom_point()
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 + std.error_em50)) +
geom_errorbar(alpha = 0.5, lwd = 0.5) +
geom_errorbarh() +
geom_point()
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 + std.error_em50)) +
geom_errorbar(alpha = 0.5, lwd = 0.25) +
geom_errorbarh(alpha = 0.5, lwd = 0.25) +
geom_point()
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 + std.error_em50)) +
geom_errorbar(alpha = 0.5, lwd = 0.25) +
geom_errorbarh(alpha = 0.5, lwd = 0.25) +
geom_point(col = 'blue')
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 + std.error_em50)) +
geom_errorbar(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_errorbarh(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_point(col = 'dodgerblue') +
theme_bw()
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 + std.error_em50)) +
geom_errorbar(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_errorbarh(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_point(col = 'dodgerblue') +
theme_bw() +
theme(panel.grid = element_blank())
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 + std.error_em50)) +
geom_errorbar(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_errorbarh(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_point(col = 'dodgerblue') +
theme_bw() +
theme(panel.grid = element_blank()) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 0.5, col = 'gray40')
dl1.coefs
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 + std.error_em50)) +
geom_errorbar(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_errorbarh(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_point(col = 'dodgerblue') +
theme_bw() +
theme(panel.grid = element_blank()) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 0.5, col = 'gray40') +
geom_abline(intercept = dl1.coefs$estimate[dl1.coefs$term == 'intercept' & dl1.coefs$model == 'first_v_peak'],
slope = dl1.coefs$estimate[dl1.coefs$term == 'slope' & dl1.coefs$model == 'first_v_peak'],
lty = 1,
alpha = 0.5,
col = 'dodgerblue',
lwd = 2)
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 + std.error_em50)) +
geom_errorbar(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_errorbarh(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_point(col = 'dodgerblue') +
theme_bw() +
theme(panel.grid = element_blank()) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 0.5, col = 'gray40') +
geom_abline(intercept = dl1.coefs$estimate[dl1.coefs$term == 'intercept' & dl1.coefs$model == 'first_v_peak'],
slope = dl1.coefs$estimate[dl1.coefs$term == 'slope' & dl1.coefs$model == 'first_v_peak'],
lty = 1,
alpha = 0.5,
col = 'dodgerblue',
lwd = 2) +
coord_cartesian(xlim = c(-25,10), ylim = c(-15,10))
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 + std.error_em50)) +
geom_errorbar(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_errorbarh(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_point(col = 'dodgerblue') +
theme_bw() +
theme(panel.grid = element_blank()) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 0.5, col = 'gray40') +
geom_abline(intercept = dl1.coefs$estimate[dl1.coefs$term == 'intercept' & dl1.coefs$model == 'first_v_peak'],
slope = dl1.coefs$estimate[dl1.coefs$term == 'slope' & dl1.coefs$model == 'first_v_peak'],
lty = 1,
alpha = 0.5,
col = 'dodgerblue',
lwd = 2) +
coord_cartesian(xlim = c(-25,15), ylim = c(-25,10))
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 + std.error_em50)) +
geom_errorbar(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_errorbarh(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_point(col = 'dodgerblue') +
theme_bw() +
theme(panel.grid = element_blank()) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 0.5, col = 'gray40') +
geom_abline(intercept = dl1.coefs$estimate[dl1.coefs$term == 'intercept' & dl1.coefs$model == 'first_v_peak'],
slope = dl1.coefs$estimate[dl1.coefs$term == 'slope' & dl1.coefs$model == 'first_v_peak'],
lty = 1,
alpha = 0.5,
col = 'dodgerblue',
lwd = 1) +
coord_cartesian(xlim = c(-25,15), ylim = c(-25,10))
dl1.coefs
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_end,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_end - std.error_end,
ymax = estimate_end + std.error_end)) +
geom_errorbar(alpha = 0.5, lwd = 0.25, col = 'red') +
geom_errorbarh(alpha = 0.5, lwd = 0.25, col = 'red') +
geom_point(col = 'red') +
theme_bw() +
theme(panel.grid = element_blank()) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 0.5, col = 'gray40') +
geom_abline(intercept = dl1.coefs$estimate[dl1.coefs$term == 'intercept' & dl1.coefs$model == 'first_v_end'],
slope = dl1.coefs$estimate[dl1.coefs$term == 'slope' & dl1.coefs$model == 'first_v_end'],
lty = 1,
alpha = 0.5,
col = 'red',
lwd = 1) +
coord_cartesian(xlim = c(-25,15), ylim = c(-25,10)) ->
first_v_end_plot
first_v_end_plot
ggpubr::ggarrange(plotlist = list(first_v_peak, plot, first_v_end_plot),
ncol = 1,
nrow = 2,
labels = c('a','b'))
ggpubr::ggarrange(plotlist = list(first_v_peak_plot, plot, first_v_end_plot),
ncol = 1,
nrow = 2,
labels = c('a','b'))
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 + std.error_em50)) +
geom_errorbar(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_errorbarh(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_point(col = 'dodgerblue') +
theme_bw() +
theme(panel.grid = element_blank()) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 0.5, col = 'gray40') +
geom_abline(intercept = dl1.coefs$estimate[dl1.coefs$term == 'intercept' & dl1.coefs$model == 'first_v_peak'],
slope = dl1.coefs$estimate[dl1.coefs$term == 'slope' & dl1.coefs$model == 'first_v_peak'],
lty = 1,
alpha = 0.5,
col = 'dodgerblue',
lwd = 1) +
coord_cartesian(xlim = c(-25,15), ylim = c(-25,10)) ->
first_v_peak_plot
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_end,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_end - std.error_end,
ymax = estimate_end + std.error_end)) +
geom_errorbar(alpha = 0.5, lwd = 0.25, col = 'red') +
geom_errorbarh(alpha = 0.5, lwd = 0.25, col = 'red') +
geom_point(col = 'red') +
theme_bw() +
theme(panel.grid = element_blank()) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 0.5, col = 'gray40') +
geom_abline(intercept = dl1.coefs$estimate[dl1.coefs$term == 'intercept' & dl1.coefs$model == 'first_v_end'],
slope = dl1.coefs$estimate[dl1.coefs$term == 'slope' & dl1.coefs$model == 'first_v_end'],
lty = 1,
alpha = 0.5,
col = 'red',
lwd = 1) +
coord_cartesian(xlim = c(-25,15), ylim = c(-25,10)) ->
first_v_end_plot
ggpubr::ggarrange(plotlist = list(first_v_peak_plot, plot, first_v_end_plot),
ncol = 1,
nrow = 2,
labels = c('a','b'))
ggpubr::ggarrange(plotlist = list(first_v_peak_plot, plot, first_v_end_plot),
ncol = 1,
labels = c('a','b'))
dev.off()
first_v_peak_plot
first_v_end_plot
first_v_peak_plot
ggpubr::ggarrange(plotlist = list(first_v_peak_plot, plot, first_v_end_plot),
ncol = 1)
ggpubr::ggarrange(plotlist = list(first_v_peak_plot, plot, first_v_end_plot))
ggpubr::ggarrange(plotlist = list(first_v_peak_plot, plot, first_v_end_plot),nrow = 1)
first_v_peak_plot
ggpubr::ggarrange(plotlist = list(first_v_peak_plot, first_v_end_plot), nrow = 2, ncol = 1)
ggpubr::ggarrange(plotlist = list(first_v_peak_plot, first_v_end_plot),
nrow = 2,
ncol = 1,
labels = c('a','b'))
dl1.coefs
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 + std.error_em50)) +
geom_errorbar(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_errorbarh(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_point(col = 'dodgerblue') +
theme_bw() +
theme(panel.grid = element_blank()) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 0.5, col = 'gray40') +
geom_abline(intercept = dl1.coefs$estimate[dl1.coefs$term == 'intercept' & dl1.coefs$model == 'first_v_peak'],
slope = dl1.coefs$estimate[dl1.coefs$term == 'slope' & dl1.coefs$model == 'first_v_peak'],
lty = 1,
alpha = 0.5,
col = 'dodgerblue',
lwd = 1) +
geom_abline(intercept = dl1.coefs$estimate[dl1.coefs$term == 'intercept' & dl1.coefs$model == 'first_v_peak'],
slope = dl1.coefs$lower.0.95[dl1.coefs$term == 'slope' & dl1.coefs$model == 'first_v_peak'],
lty = 3,
alpha = 0.5,
col = 'dodgerblue',
lwd = 0.5) +
geom_abline(intercept = dl1.coefs$estimate[dl1.coefs$term == 'intercept' & dl1.coefs$model == 'first_v_peak'],
slope = dl1.coefs$upper.0.95[dl1.coefs$term == 'slope' & dl1.coefs$model == 'first_v_peak'],
lty = 3,
alpha = 0.5,
col = 'dodgerblue',
lwd = 0.5) +
coord_cartesian(xlim = c(-25,15), ylim = c(-25,10)) ->
first_v_peak_plot
first_v_peak_plot
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 + std.error_em50)) +
geom_errorbar(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_errorbarh(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_point(col = 'dodgerblue') +
theme_bw() +
theme(panel.grid = element_blank()) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 0.5, col = 'gray40') +
geom_abline(intercept = dl1.coefs$estimate[dl1.coefs$term == 'intercept' & dl1.coefs$model == 'first_v_peak'],
slope = dl1.coefs$estimate[dl1.coefs$term == 'slope' & dl1.coefs$model == 'first_v_peak'],
lty = 1,
alpha = 0.5,
col = 'dodgerblue',
lwd = 1) +
geom_abline(intercept = dl1.coefs$estimate[dl1.coefs$term == 'intercept' & dl1.coefs$model == 'first_v_peak'],
slope = dl1.coefs$lower.0.95[dl1.coefs$term == 'slope' & dl1.coefs$model == 'first_v_peak'],
lty = 1,
alpha = 0.5,
col = 'dodgerblue',
lwd = 0.5) +
geom_abline(intercept = dl1.coefs$estimate[dl1.coefs$term == 'intercept' & dl1.coefs$model == 'first_v_peak'],
slope = dl1.coefs$upper.0.95[dl1.coefs$term == 'slope' & dl1.coefs$model == 'first_v_peak'],
lty = 1,
alpha = 0.5,
col = 'dodgerblue',
lwd = 0.5) +
coord_cartesian(xlim = c(-25,15), ylim = c(-25,10)) ->
first_v_peak_plot
first_v_peak_plot
# produce plots of the Deming regression results:
all_coefs %>%
ggplot(aes(x = estimate_onset,
y = estimate_em50,
xmin = estimate_onset - std.error_onset,
xmax = estimate_onset + std.error_onset,
ymin = estimate_em50 - std.error_em50,
ymax = estimate_em50 + std.error_em50)) +
geom_errorbar(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_errorbarh(alpha = 0.5, lwd = 0.25, col = 'dodgerblue') +
geom_point(col = 'dodgerblue') +
theme_bw() +
theme(panel.grid = element_blank()) +
geom_abline(intercept = 0, slope = 1, lty = 2, alpha = 0.5, col = 'gray40') +
geom_abline(intercept = dl1.coefs$estimate[dl1.coefs$term == 'intercept' & dl1.coefs$model == 'first_v_peak'],
slope = dl1.coefs$estimate[dl1.coefs$term == 'slope' & dl1.coefs$model == 'first_v_peak'],
lty = 1,
alpha = 0.5,
col = 'dodgerblue',
lwd = 1) +
coord_cartesian(xlim = c(-25,15), ylim = c(-25,10)) ->
first_v_peak_plot
first_v_peak_plot
ggpubr::ggarrange(plotlist = list(first_v_peak_plot, first_v_end_plot),
nrow = 2,
ncol = 1,
labels = c('a','b')) -> iler_deming_plot
